/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.sql.Date;
import java.time.LocalDate;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import reports.ReportService;

/**
 *
 * @author brais
 */
public class MainJasper extends javax.swing.JFrame {

    private static final String REPORT_PATH_PLAYERS = "/reports/players.jrxml";
    private static final String REPORT_PATH_INSCRIPTIONS = "/reports/inscriptions.jrxml";
    private static final String REPORT_PATH_TOURNAMENTS_BY_PLAYERS = "/reports/TorneosPorTenista.jrxml";
    private static final String REPORT_PATH_INSCRIPTIONS_BY_DATE = "/reports/InscripcionesPorFecha.jrxml";

    private final ReportService reportService;

    /**
     * Creates new form MainJasper
     */
    public MainJasper() {
        initComponents();

        setTitle("Jasper Reports");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        Properties prop = new Properties();
        try {
            prop.load(MainJasper.class.getClassLoader().getResourceAsStream("config.properties"));
        } catch (IOException ex) {
            ex.printStackTrace();
            this.dispose();
        }

        reportService = new ReportService(
                prop.getProperty("dburl"),
                prop.getProperty("dbuser"),
                prop.getProperty("dbpassword"));

        try {
            Image icon = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/pelota.png"));
            setIconImage(icon);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnSavePlayers = new javax.swing.JButton();
        btnViewPlayers = new javax.swing.JButton();
        btnViewAndSavePlayers = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnViewInscriptions = new javax.swing.JButton();
        btnSaveInscriptions = new javax.swing.JButton();
        btnViewAndSaveInscriptions = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnSaveTorneosPorTenistas = new javax.swing.JButton();
        btnViewTorneosPorTenistas = new javax.swing.JButton();
        btnViewAndSaveTorneosPorTenistas = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnSaveInscripcionesPorFecha = new javax.swing.JButton();
        btnViewInscripcionesPorFecha = new javax.swing.JButton();
        btnViewAndSaveInscripcionesPorFecha = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Players"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        btnSavePlayers.setText("Save Pdf");
        btnSavePlayers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSavePlayersActionPerformed(evt);
            }
        });
        jPanel1.add(btnSavePlayers, java.awt.BorderLayout.CENTER);

        btnViewPlayers.setText("View Report");
        btnViewPlayers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPlayersActionPerformed(evt);
            }
        });
        jPanel1.add(btnViewPlayers, java.awt.BorderLayout.PAGE_START);

        btnViewAndSavePlayers.setText("View and Save");
        btnViewAndSavePlayers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAndSavePlayersActionPerformed(evt);
            }
        });
        jPanel1.add(btnViewAndSavePlayers, java.awt.BorderLayout.PAGE_END);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Inscriptions"));
        jPanel2.setToolTipText("");
        jPanel2.setLayout(new java.awt.BorderLayout());

        btnViewInscriptions.setText("View Report");
        btnViewInscriptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewInscriptionsActionPerformed(evt);
            }
        });
        jPanel2.add(btnViewInscriptions, java.awt.BorderLayout.PAGE_START);

        btnSaveInscriptions.setText("Save Pdf");
        btnSaveInscriptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveInscriptionsActionPerformed(evt);
            }
        });
        jPanel2.add(btnSaveInscriptions, java.awt.BorderLayout.CENTER);

        btnViewAndSaveInscriptions.setText("View and Save");
        btnViewAndSaveInscriptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAndSaveInscriptionsActionPerformed(evt);
            }
        });
        jPanel2.add(btnViewAndSaveInscriptions, java.awt.BorderLayout.PAGE_END);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Torneos Por Tenistas"));
        jPanel3.setLayout(new java.awt.BorderLayout());

        btnSaveTorneosPorTenistas.setText("Save Pdf");
        btnSaveTorneosPorTenistas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveTorneosPorTenistasActionPerformed(evt);
            }
        });
        jPanel3.add(btnSaveTorneosPorTenistas, java.awt.BorderLayout.CENTER);

        btnViewTorneosPorTenistas.setText("View Report");
        btnViewTorneosPorTenistas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewTorneosPorTenistasActionPerformed(evt);
            }
        });
        jPanel3.add(btnViewTorneosPorTenistas, java.awt.BorderLayout.PAGE_START);

        btnViewAndSaveTorneosPorTenistas.setText("View and Save");
        btnViewAndSaveTorneosPorTenistas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAndSaveTorneosPorTenistasActionPerformed(evt);
            }
        });
        jPanel3.add(btnViewAndSaveTorneosPorTenistas, java.awt.BorderLayout.PAGE_END);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Inscripciones Por Fecha"));
        jPanel4.setLayout(new java.awt.BorderLayout());

        btnSaveInscripcionesPorFecha.setText("Save Pdf");
        btnSaveInscripcionesPorFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveInscripcionesPorFechaActionPerformed(evt);
            }
        });
        jPanel4.add(btnSaveInscripcionesPorFecha, java.awt.BorderLayout.CENTER);

        btnViewInscripcionesPorFecha.setText("View Report");
        btnViewInscripcionesPorFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewInscripcionesPorFechaActionPerformed(evt);
            }
        });
        jPanel4.add(btnViewInscripcionesPorFecha, java.awt.BorderLayout.PAGE_START);

        btnViewAndSaveInscripcionesPorFecha.setText("View and Save");
        btnViewAndSaveInscripcionesPorFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAndSaveInscripcionesPorFechaActionPerformed(evt);
            }
        });
        jPanel4.add(btnViewAndSaveInscripcionesPorFecha, java.awt.BorderLayout.PAGE_END);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewPlayersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPlayersActionPerformed
        try {
            reportService.get(REPORT_PATH_PLAYERS).view();
        } catch (Exception ex) {
            Logger.getLogger(MainJasper.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnViewPlayersActionPerformed

    private void btnSavePlayersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSavePlayersActionPerformed
        SavePdfChooser chooser = new SavePdfChooser(this);
        String dest = chooser.getFilePath();
        try {
            reportService.get(REPORT_PATH_PLAYERS).toPdf(dest, true);
        } catch (Exception ex) {
            Logger.getLogger(MainJasper.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSavePlayersActionPerformed

    private void btnViewAndSavePlayersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAndSavePlayersActionPerformed
        SavePdfChooser chooser = new SavePdfChooser(this);
        String dest = chooser.getFilePath();
        try {
            reportService.get(REPORT_PATH_PLAYERS).view().toPdf(dest, false);
        } catch (Exception ex) {
            Logger.getLogger(MainJasper.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnViewAndSavePlayersActionPerformed

    private void btnViewInscriptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewInscriptionsActionPerformed
        try {
            reportService.get(REPORT_PATH_INSCRIPTIONS).view();
        } catch (Exception ex) {
            Logger.getLogger(MainJasper.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnViewInscriptionsActionPerformed

    private void btnSaveInscriptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveInscriptionsActionPerformed
        SavePdfChooser chooser = new SavePdfChooser(this);
        String dest = chooser.getFilePath();
        try {
            reportService.get(REPORT_PATH_INSCRIPTIONS).toPdf(dest, true);
        } catch (Exception ex) {
            Logger.getLogger(MainJasper.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveInscriptionsActionPerformed

    private void btnViewAndSaveInscriptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAndSaveInscriptionsActionPerformed
        SavePdfChooser chooser = new SavePdfChooser(this);
        String dest = chooser.getFilePath();
        try {
            reportService.get(REPORT_PATH_INSCRIPTIONS).view().toPdf(dest, false);
        } catch (Exception ex) {
            Logger.getLogger(MainJasper.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnViewAndSaveInscriptionsActionPerformed

    private void btnViewTorneosPorTenistasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewTorneosPorTenistasActionPerformed
        try {
            Map<String, Object> parameters = new HashMap<>();
            String clasificacionDeseada = "Amateur";
            parameters.put("TorneoClasificacionParametro", clasificacionDeseada);
            reportService.get(REPORT_PATH_TOURNAMENTS_BY_PLAYERS, parameters).view();
        } catch (Exception ex) {
            Logger.getLogger(MainJasper.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnViewTorneosPorTenistasActionPerformed

    private void btnSaveTorneosPorTenistasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveTorneosPorTenistasActionPerformed
        SavePdfChooser chooser = new SavePdfChooser(this);
        String dest = chooser.getFilePath();
        try {
            Map<String, Object> parameters = new HashMap<>();
            String clasificacionDeseada = "Amateur";
            parameters.put("TorneoClasificacionParametro", clasificacionDeseada);
            reportService.get(REPORT_PATH_TOURNAMENTS_BY_PLAYERS, parameters).toPdf(dest, true);
        } catch (Exception ex) {
            Logger.getLogger(MainJasper.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveTorneosPorTenistasActionPerformed

    private void btnViewAndSaveTorneosPorTenistasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAndSaveTorneosPorTenistasActionPerformed
        SavePdfChooser chooser = new SavePdfChooser(this);
        String dest = chooser.getFilePath();
        try {
            Map<String, Object> parameters = new HashMap<>();
            String clasificacionDeseada = "Amateur";
            parameters.put("TorneoClasificacionParametro", clasificacionDeseada);
            reportService.get(REPORT_PATH_TOURNAMENTS_BY_PLAYERS, parameters).view().toPdf(dest, false);
        } catch (Exception ex) {
            Logger.getLogger(MainJasper.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnViewAndSaveTorneosPorTenistasActionPerformed

    private void btnViewInscripcionesPorFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewInscripcionesPorFechaActionPerformed
        try {
            Map<String, Object> parameters = new HashMap<>();
            LocalDate localFechaInicio = LocalDate.of(2025, 5, 1);
            LocalDate localFechaFin = LocalDate.of(2025, 5, 31);
            
            Date fechaInicio = Date.valueOf(localFechaInicio);
            Date fechaFin = Date.valueOf(localFechaFin);

            parameters.put("FechaInicio", fechaInicio);
            parameters.put("FechaFin", fechaFin);
            reportService.get(REPORT_PATH_INSCRIPTIONS_BY_DATE,parameters).view();
        } catch (Exception ex) {
            Logger.getLogger(MainJasper.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnViewInscripcionesPorFechaActionPerformed

    private void btnSaveInscripcionesPorFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveInscripcionesPorFechaActionPerformed
        SavePdfChooser chooser = new SavePdfChooser(this);
        String dest = chooser.getFilePath();
        try {
            Map<String, Object> parameters = new HashMap<>();
            LocalDate localFechaInicio = LocalDate.of(2025, 5, 1);
            LocalDate localFechaFin = LocalDate.of(2025, 5, 31);
            
            Date fechaInicio = Date.valueOf(localFechaInicio);
            Date fechaFin = Date.valueOf(localFechaFin);

            parameters.put("FechaInicio", fechaInicio);
            parameters.put("FechaFin", fechaFin);
            reportService.get(REPORT_PATH_INSCRIPTIONS_BY_DATE,parameters).toPdf(dest, true);
        } catch (Exception ex) {
            Logger.getLogger(MainJasper.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveInscripcionesPorFechaActionPerformed

    private void btnViewAndSaveInscripcionesPorFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAndSaveInscripcionesPorFechaActionPerformed
        SavePdfChooser chooser = new SavePdfChooser(this);
        String dest = chooser.getFilePath();
        try {
            Map<String, Object> parameters = new HashMap<>();
            LocalDate localFechaInicio = LocalDate.of(2025, 5, 1);
            LocalDate localFechaFin = LocalDate.of(2025, 5, 31);
            
            Date fechaInicio = Date.valueOf(localFechaInicio);
            Date fechaFin = Date.valueOf(localFechaFin);

            parameters.put("FechaInicio", fechaInicio);
            parameters.put("FechaFin", fechaFin);
            reportService.get(REPORT_PATH_INSCRIPTIONS_BY_DATE,parameters).view().toPdf(dest, false);
        } catch (Exception ex) {
            Logger.getLogger(MainJasper.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnViewAndSaveInscripcionesPorFechaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSaveInscripcionesPorFecha;
    private javax.swing.JButton btnSaveInscriptions;
    private javax.swing.JButton btnSavePlayers;
    private javax.swing.JButton btnSaveTorneosPorTenistas;
    private javax.swing.JButton btnViewAndSaveInscripcionesPorFecha;
    private javax.swing.JButton btnViewAndSaveInscriptions;
    private javax.swing.JButton btnViewAndSavePlayers;
    private javax.swing.JButton btnViewAndSaveTorneosPorTenistas;
    private javax.swing.JButton btnViewInscripcionesPorFecha;
    private javax.swing.JButton btnViewInscriptions;
    private javax.swing.JButton btnViewPlayers;
    private javax.swing.JButton btnViewTorneosPorTenistas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    // End of variables declaration//GEN-END:variables
}
